axis.title.x = element_text(margin = margin(t = 7)),
axis.title.y = element_text(margin = margin(r = 7)))
return(topic_term_plot)
}
top_term <- tidy_beta %>%
arrange(desc(beta)) %>%
examine_top_terms(top_n = 10)
top_term %>% plot_topic_terms(ncol = 2) +
facet_wrap(~topic, scales = "free_y") +
labs(x = "Word", y = expression("Word Probabilities"~(beta))) +
theme_bw() +
theme(
axis.line = element_line(color = "#3B3B3B", linewidth = 0.3),
axis.ticks = element_line(color = "#3B3B3B", linewidth = 0.3),
strip.text.x = element_text(size = 11, color = "#3B3B3B"),
axis.text.x = element_text(size = 11, color = "#3B3B3B"),
axis.text.y = element_text(size = 11, color = "#3B3B3B"),
axis.title = element_text(size = 11, color = "#3B3B3B"),
axis.title.x = element_text(size = 12, margin = margin(t = 15)),
axis.title.y = element_text(size = 12, margin = margin(r = 10)))
top_term <- tidy_beta %>%
arrange(desc(beta)) %>%
examine_top_terms(top_n = 10)
top_term %>% plot_topic_terms(ncol = 2) +
labs(x = "Word", y = expression("Word Probabilities"~(beta))) +
theme_bw() +
theme(
axis.line = element_line(color = "#3B3B3B", linewidth = 0.3),
axis.ticks = element_line(color = "#3B3B3B", linewidth = 0.3),
strip.text.x = element_text(size = 11, color = "#3B3B3B"),
axis.text.x = element_text(size = 11, color = "#3B3B3B"),
axis.text.y = element_text(size = 11, color = "#3B3B3B"),
axis.title = element_text(size = 11, color = "#3B3B3B"),
axis.title.x = element_text(size = 12, margin = margin(t = 15)),
axis.title.y = element_text(size = 12, margin = margin(r = 10)))
top_term <- tidy_beta %>%
arrange(desc(beta)) %>%
examine_top_terms(top_n = 10)
top_term %>% plot_topic_terms(ncol = 2) +
labs(x = "Word", y = expression("Word Probabilities"~(beta)))
top_term <- tidy_beta %>%
arrange(desc(beta)) %>%
examine_top_terms(top_n = 10)
top_term %>% plot_topic_terms(ncol = 2) +
labs(x = "Word", y = expression("Word Probabilities"~(beta)))
top_term <- tidy_beta %>%
arrange(desc(beta)) %>%
examine_top_terms(top_n = 10)
top_term %>% plot_topic_terms(ncol = 2) +
labs(x = "Word", y = expression("Word Probabilities"~(beta)))
examine_top_terms <-
function(data, top_n, topic_names = NULL, ...) {
topic_term <- data %>%
group_by(topic, ...) %>%
top_n(top_n, beta) %>%
ungroup() %>%
mutate(
ord = factor(topic, levels = c(min(topic): max(topic))),
tt = as.numeric(topic),
topic = paste("Topic", topic),
term = reorder_within(term, beta, topic)) %>%
arrange(ord)
levelt = paste("Topic", topic_term$ord) %>% unique()
topic_term$topic = factor(topic_term$topic,
levels = levelt)
if(!is.null(topic_names)){
topic_term$topic = topic_names[topic_term$tt]
topic_term <- topic_term %>%
mutate(topic = as.character(topic)) %>%
mutate(topic = ifelse(!is.na(topic), topic, paste('Topic',tt)))
topic_term$topic =
factor(topic_term$topic, levels = topic_term$topic %>% unique())
}
topic_term$tt = NULL
return(topic_term)
}
plot_topic_terms <-
function(data, ncol = ncol, ...) {
topic_term_plot <- ggplot(data, aes(term, beta, fill = topic)) +
geom_col(show.legend = FALSE, alpha = 0.8) +
facet_wrap(~ topic, scales = "free", ncol = ncol) +
scale_x_reordered() +
scale_y_continuous(labels = numform::ff_num(zero = 0, digits = 3)) +
coord_flip() +
xlab("") +
ylab("Word probability") +
theme_minimal(base_size = 12) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "#3B3B3B", size = 0.3),
axis.ticks = element_line(color = "#3B3B3B", size = 0.3),
strip.text.x = element_text(size = 12, color = "#3B3B3B"),
axis.text.x = element_text(size = 12, color = "#3B3B3B"),
axis.text.y = element_text(size = 12, color = "#3B3B3B"),
axis.title = element_text(size = 12, color = "#3B3B3B"),
axis.title.x = element_text(margin = margin(t = 7)),
axis.title.y = element_text(margin = margin(r = 7)))
return(topic_term_plot)
}
examine_top_terms <-
function(data, top_n, topic_names = NULL, ...) {
topic_term <- data %>%
group_by(topic, ...) %>%
top_n(top_n, beta) %>%
ungroup() %>%
mutate(
ord = factor(topic, levels = c(min(topic): max(topic))),
tt = as.numeric(topic),
topic = paste("Topic", topic),
term = reorder_within(term, beta, topic)) %>%
arrange(ord)
levelt = paste("Topic", topic_term$ord) %>% unique()
topic_term$topic = factor(topic_term$topic,
levels = levelt)
if(!is.null(topic_names)){
topic_term$topic = topic_names[topic_term$tt]
topic_term <- topic_term %>%
mutate(topic = as.character(topic)) %>%
mutate(topic = ifelse(!is.na(topic), topic, paste('Topic',tt)))
topic_term$topic =
factor(topic_term$topic, levels = topic_term$topic %>% unique())
}
topic_term$tt = NULL
return(topic_term)
}
plot_topic_terms <-
function(data, ncol = ncol, ...) {
topic_term_plot <- ggplot(data, aes(term, beta, fill = topic)) +
geom_col(show.legend = FALSE, alpha = 0.8) +
facet_wrap(~ topic, scales = "free", ncol = ncol) +
scale_x_reordered() +
scale_y_continuous(labels = numform::ff_num(zero = 0, digits = 3)) +
coord_flip() +
xlab("") +
ylab("Word probability") +
theme_minimal(base_size = 12) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "#3B3B3B", size = 0.3),
axis.ticks = element_line(color = "#3B3B3B", size = 0.3),
strip.text.x = element_text(size = 12, color = "#3B3B3B"),
axis.text.x = element_text(size = 12, color = "#3B3B3B"),
axis.text.y = element_text(size = 12, color = "#3B3B3B"),
axis.title = element_text(size = 12, color = "#3B3B3B"),
axis.title.x = element_text(margin = margin(t = 7)),
axis.title.y = element_text(margin = margin(r = 7)))
return(topic_term_plot)
}
top_term <- tidy_beta %>%
arrange(desc(beta)) %>%
examine_top_terms(top_n = 10)
top_term %>% plot_topic_terms(ncol = 2) +
labs(x = "Word", y = expression("Word Probabilities"~(beta)))
top_term <- tidy_beta %>%
examine_top_terms(top_n = 10)
top_term %>% plot_topic_term(ncol = 2) +
labs(x = "Word", y = expression("Word Probabilities"~(beta)))
top_term
examine_top_terms <-
function(data, top_n, topic_names = NULL, ...) {
topic_term <- data %>%
group_by(topic, ...) %>%
top_n(top_n, beta) %>%
ungroup()
return(topic_term)
}
plot_topic_term <-
function(data, ncol = ncol, ...) {
topic_term_plot <- ggplot(data, aes(term, beta, fill = topic)) +
geom_col(show.legend = FALSE, alpha = 0.8) +
facet_wrap(~ topic, scales = "free", ncol = ncol) +
scale_x_reordered() +
scale_y_continuous(labels = numform::ff_num(zero = 0, digits = 3)) +
coord_flip() +
xlab("") +
ylab("Word probability") +
theme_minimal(base_size = 12) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "#3B3B3B", size = 0.3),
axis.ticks = element_line(color = "#3B3B3B", size = 0.3),
strip.text.x = element_text(size = 12, color = "#3B3B3B"),
axis.text.x = element_text(size = 12, color = "#3B3B3B"),
axis.text.y = element_text(size = 12, color = "#3B3B3B"),
axis.title = element_text(size = 12, color = "#3B3B3B"),
axis.title.x = element_text(margin = margin(t = 7)),
axis.title.y = element_text(margin = margin(r = 7)))
return(topic_term_plot)
}
top_term <- tidy_beta %>%
examine_top_terms(top_n = 10)
top_term
examine_top_terms <-
function(data, top_n, topic_names = NULL, ...) {
topic_term <- data %>%
group_by(topic, ...) %>%
top_n(top_n, beta) %>%
ungroup()
return(topic_term)
}
plot_topic_term <-
function(data, ncol = ncol, ...) {
topic_term <- data %>%
mutate(
ord = factor(topic, levels = c(min(topic): max(topic))),
tt = as.numeric(topic),
topic = paste("Topic", topic),
term = reorder_within(term, beta, topic)) %>%
arrange(ord)
levelt = paste("Topic", topic_term$ord) %>% unique()
topic_term$topic = factor(topic_term$topic,
levels = levelt)
if(!is.null(topic_names)){
topic_term$topic = topic_names[topic_term$tt]
topic_term <- topic_term %>%
mutate(topic = as.character(topic)) %>%
mutate(topic = ifelse(!is.na(topic), topic, paste('Topic',tt)))
topic_term$topic =
factor(topic_term$topic, levels = topic_term$topic %>% unique())
}
topic_term$tt = NULL
topic_term_plot <- ggplot(data, aes(term, beta, fill = topic)) +
geom_col(show.legend = FALSE, alpha = 0.8) +
facet_wrap(~ topic, scales = "free", ncol = ncol) +
scale_x_reordered() +
scale_y_continuous(labels = numform::ff_num(zero = 0, digits = 3)) +
coord_flip() +
xlab("") +
ylab("Word probability") +
theme_minimal(base_size = 12) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "#3B3B3B", size = 0.3),
axis.ticks = element_line(color = "#3B3B3B", size = 0.3),
strip.text.x = element_text(size = 12, color = "#3B3B3B"),
axis.text.x = element_text(size = 12, color = "#3B3B3B"),
axis.text.y = element_text(size = 12, color = "#3B3B3B"),
axis.title = element_text(size = 12, color = "#3B3B3B"),
axis.title.x = element_text(margin = margin(t = 7)),
axis.title.y = element_text(margin = margin(r = 7)))
return(topic_term_plot)
}
examine_top_terms <-
function(data, top_n, ...) {
topic_term <- data %>%
group_by(topic, ...) %>%
top_n(top_n, beta) %>%
ungroup()
return(topic_term)
}
plot_topic_term <-
function(data, ncol = ncol, topic_names = NULL, ...) {
topic_term <- data %>%
mutate(
ord = factor(topic, levels = c(min(topic): max(topic))),
tt = as.numeric(topic),
topic = paste("Topic", topic),
term = reorder_within(term, beta, topic)) %>%
arrange(ord)
levelt = paste("Topic", topic_term$ord) %>% unique()
topic_term$topic = factor(topic_term$topic,
levels = levelt)
if(!is.null(topic_names)){
topic_term$topic = topic_names[topic_term$tt]
topic_term <- topic_term %>%
mutate(topic = as.character(topic)) %>%
mutate(topic = ifelse(!is.na(topic), topic, paste('Topic',tt)))
topic_term$topic =
factor(topic_term$topic, levels = topic_term$topic %>% unique())
}
topic_term$tt = NULL
topic_term_plot <- ggplot(data, aes(term, beta, fill = topic)) +
geom_col(show.legend = FALSE, alpha = 0.8) +
facet_wrap(~ topic, scales = "free", ncol = ncol) +
scale_x_reordered() +
scale_y_continuous(labels = numform::ff_num(zero = 0, digits = 3)) +
coord_flip() +
xlab("") +
ylab("Word probability") +
theme_minimal(base_size = 12) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "#3B3B3B", size = 0.3),
axis.ticks = element_line(color = "#3B3B3B", size = 0.3),
strip.text.x = element_text(size = 12, color = "#3B3B3B"),
axis.text.x = element_text(size = 12, color = "#3B3B3B"),
axis.text.y = element_text(size = 12, color = "#3B3B3B"),
axis.title = element_text(size = 12, color = "#3B3B3B"),
axis.title.x = element_text(margin = margin(t = 7)),
axis.title.y = element_text(margin = margin(r = 7)))
return(topic_term_plot)
}
top_term <- tidy_beta %>%
examine_top_terms(top_n = 10)
top_term %>% plot_topic_term(ncol = 2) +
labs(x = "Word", y = expression("Word Probabilities"~(beta)))
top_term
examine_top_terms <-
function(data, top_n, ...) {
topic_term <- data %>%
group_by(topic, ...) %>%
top_n(top_n, beta) %>%
ungroup()
return(topic_term)
}
plot_topic_term <-
function(data, ncol = ncol, topic_names = NULL, ...) {
topic_term <- data %>%
mutate(
ord = factor(topic, levels = c(min(topic): max(topic))),
tt = as.numeric(topic),
topic = paste("Topic", topic),
term = reorder_within(term, beta, topic)) %>%
arrange(ord)
levelt = paste("Topic", topic_term$ord) %>% unique()
topic_term$topic = factor(topic_term$topic,
levels = levelt)
if(!is.null(topic_names)){
topic_term$topic = topic_names[topic_term$tt]
topic_term <- topic_term %>%
mutate(topic = as.character(topic)) %>%
mutate(topic = ifelse(!is.na(topic), topic, paste('Topic',tt)))
topic_term$topic =
factor(topic_term$topic, levels = topic_term$topic %>% unique())
}
topic_term$tt = NULL
topic_term_plot <- ggplot(topic_term, aes(term, beta, fill = topic)) +
geom_col(show.legend = FALSE, alpha = 0.8) +
facet_wrap(~ topic, scales = "free", ncol = ncol) +
scale_x_reordered() +
scale_y_continuous(labels = numform::ff_num(zero = 0, digits = 3)) +
coord_flip() +
xlab("") +
ylab("Word probability") +
theme_minimal(base_size = 12) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "#3B3B3B", size = 0.3),
axis.ticks = element_line(color = "#3B3B3B", size = 0.3),
strip.text.x = element_text(size = 12, color = "#3B3B3B"),
axis.text.x = element_text(size = 12, color = "#3B3B3B"),
axis.text.y = element_text(size = 12, color = "#3B3B3B"),
axis.title = element_text(size = 12, color = "#3B3B3B"),
axis.title.x = element_text(margin = margin(t = 7)),
axis.title.y = element_text(margin = margin(r = 7)))
return(topic_term_plot)
}
top_term <- tidy_beta %>%
examine_top_terms(top_n = 10)
top_term %>% plot_topic_term(ncol = 2) +
labs(x = "Word", y = expression("Word Probabilities"~(beta)))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
top_term <- tidy_beta %>%
examine_top_terms(top_n = 10)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
# suppressWarnings({
# install.packages("readxl", "tidyverse", "dplyr", "tidytext", "stringr", "ggplot2", "plotly", "stm", "DT", "purrr", "furrr", "future", "tidyr", "reshape2", "stminsights", "numform")
# devtools::install_github('haven-jeon/KoNLP')
# devtools::install_github("mshin77/TextAnalysisR")
# })
suppressPackageStartupMessages({
library(magrittr)
library(readxl)
library(tidyverse)
library(dplyr)
library(KoNLP)
library(tidytext)
library(stringr)
library(ggplot2)
library(TextAnalysisR)
library(plotly)
library(stm)
library(DT)
library(purrr)
library(furrr)
library(future)
library(tidyr)
library(reshape2)
library(stminsights)
library(numform)
})
suppressWarnings(library(tidyverse))
#| code-fold: false
# delphi_data <- read_excel("data/delphi_data.xlsx")
load("data/delphi_data.RData")
#| code-fold: false
top_20_pos <- delphi_processed_init %>%
count(pos) %>%
arrange(desc(n)) %>%
head(20)
top_20_pos$pos <- c("support", "regarding", "student", "for", "through", "education", "special education", "fall", "target", "school", "linkage", "various", "program", "exist", "related", "measure", "cooperation", "basic academic ability", "learning disabilities", "teacher")
top_20_pos_gg <- ggplot(top_20_pos, aes(x = reorder(pos, n), y = n)) +
geom_point() +
coord_flip() +
labs(x = NULL, y = "Word Counts") +
theme_bw() +
theme(axis.title.x = element_text(size = 11),
axis.title.y = element_text(size = 11),
axis.text.x = element_text(size = 11),
axis.text.y = element_text(size = 11))
top_20_pos_gg %>% ggplotly()
K_result %>%
transmute(K,
`Lower bound` = lbound,
Residuals = map_dbl(residual, "dispersion"),
`Semantic coherence` = map_dbl(semantic_coherence, mean),
`Held-out likelihood` = map_dbl(eval_heldout, "expected.heldout")) %>%
gather(Metric, Value, -K) %>%
ggplot(aes(K, Value, color = Metric)) +
theme_bw() +
geom_line(size = 1, alpha = 0.7, show.legend = FALSE) +
geom_point(size = 3, alpha = 0.7, show.legend = FALSE) +
theme_bw() +
theme(
axis.line = element_line(color = "#3B3B3B", linewidth = 0.3),
axis.ticks = element_line(color = "#3B3B3B", linewidth = 0.3),
strip.text.x = element_text(size = 11, color = "#3B3B3B"),
axis.text.x = element_text(size = 11, color = "#3B3B3B"),
axis.text.y = element_text(size = 11, color = "#3B3B3B"),
axis.title = element_text(size = 11, color = "#3B3B3B"),
axis.title.x = element_text(size = 12, margin = margin(t = 15)),
axis.title.y = element_text(size = 12, margin = margin(r = 10))) +
facet_wrap(~Metric, scales = "free_y") +
labs(x = "Number of Topics (K)",
y = NULL,
title = "")
datatable(tidy_beta_table, rownames = FALSE)
top_term <- tidy_beta %>%
examine_top_terms(top_n = 10)
top_term %>% plot_topic_term(ncol = 2) +
labs(x = "Word", y = expression("Word Probabilities"~(beta))) +
theme(
strip.text.x = element_text(size = 13, color = "#3B3B3B"),
axis.text.x = element_text(size = 13, color = "#3B3B3B"),
axis.text.y = element_text(size = 12, color = "#3B3B3B"),
axis.title = element_text(size = 12, color = "#3B3B3B"))
datatable(tidy_gamma_table, rownames = FALSE)
extract_lower_tri <- function(x){
x[upper.tri(x)] <- NA
return(x)
}
corr <- topicCorr(topic_model) %>% .$cor %>%
extract_lower_tri() %>%
melt(na.rm = T) %>%
ggplot(aes(x = factor(Var1),
y = factor(Var2),
fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "#0D1D41", high = "#94465a", mid = "white",
midpoint = 0,
limit = c(-1, 1), space = "Lab") +
geom_text(aes(Var1, Var2, label = round(value, 3)), color = "black", size = 3.5) +
labs(x = "Topic", y = "Topic",
title = "") +
theme_bw() +
theme(
axis.line = element_line(color = "#3B3B3B", linewidth = 0.3),
axis.ticks = element_line(color = "#3B3B3B", linewidth = 0.3),
strip.text.x = element_text(size = 11, color = "#3B3B3B"),
axis.text.x = element_text(size = 11, color = "#3B3B3B"),
axis.text.y = element_text(size = 11, color = "#3B3B3B"),
axis.title = element_text(size = 11, color = "#3B3B3B"),
axis.title.x = element_text(size = 12, margin = margin(t = 15)),
axis.title.y = element_text(size = 12, margin = margin(r = 10)))
corr
top_term <- tidy_beta %>%
examine_top_terms(top_n = 10)
top_term %>% plot_topic_term(ncol = 2) +
labs(x = "Word", y = expression("Word Probabilities"~(beta))) +
theme(
strip.text.x = element_text(size = 12, color = "#3B3B3B"),
axis.text.x = element_text(size = 13, color = "#3B3B3B"),
axis.text.y = element_text(size = 12, color = "#3B3B3B"),
axis.title = element_text(size = 12, color = "#3B3B3B"))
top_term <- tidy_beta %>%
examine_top_terms(top_n = 10)
top_term %>% plot_topic_term(ncol = 2) +
labs(x = "Word", y = expression("Word Probabilities"~(beta))) +
theme(
strip.text.x = element_text(size = 12, color = "#3B3B3B"),
axis.text.x = element_text(size = 12, color = "#3B3B3B"),
axis.text.y = element_text(size = 13, color = "#3B3B3B"),
axis.title = element_text(size = 13, color = "#3B3B3B"))
top_term <- tidy_beta %>%
examine_top_terms(top_n = 10)
top_term %>% plot_topic_term(ncol = 2) +
labs(x = "Word", y = expression("Word Probabilities"~(beta))) +
theme(
strip.text.x = element_text(size = 12, color = "#3B3B3B"),
axis.text.x = element_text(size = 12, color = "#3B3B3B"),
axis.text.y = element_text(size = 13, color = "#3B3B3B"),
axis.title = element_text(size = 12, color = "#3B3B3B"))
top_term
print(top_term)
print(top_term, n = 60)
tidy_beta <- tidy(topic_model,
matrix = "beta",
document_names = rownames(delphi_dfm),
log = FALSE)
tidy_beta_table <- tidy_beta %>%
mutate(beta = round(beta, 3)) %>%
arrange(topic, desc(beta), .by_group = TRUE)
datatable(tidy_beta_table, rownames = FALSE)
top_term <- tidy_beta %>%
examine_top_terms(top_n = 10)
top_term
